Graph representation | Spencer Tipping
Licensed under the terms of the MIT source code license

Introduction.
Like most programming languages, Havoc builds a tree of sorts out of your source code. However, unlike most programming languages, Havoc encourages you to think about programs in terms of the
graphs that they become. For instance, consider this equation:

| fibonacci ṅ = n                                     ← n < 2
                fibonacci (n - 1) + fibonacci (n - 2) ↤

The graph structure looks something like this (please forgive the ascii art):

| +-------+-----------+                         <- fibonacci
  |       |           |
  0 0  =  0 (0 - 1) + 0 (0 - 2) ← 0 < 2
    |        |           |        |
    +-----+--+-----------+--------+             <- ṅ
          |
          0                     ↤

There are some annotations required for this graph to really capture what's going on. In particular, notice that the variable 'n' has a dot over it. This means that it's local to the equation
and doesn't constrain a global called 'n'. The dot above a variable is a 'variant marker'; that is, it absorbs a degree of freedom.
