Havoc integer library | Spencer Tipping
Licensed under the terms of the MIT source code license

Introduction.
This library provides integer support in Havoc. Literals are already parsed as part of the language, but they remain abstract syntax nodes until they are converted into more direct numeric
forms. Because Havoc is designed to be very general, there is no particular form that is used to represent integers. This file defines several, along with the machine operations that implement
them.

Register implementation.
This is definitely the simplest, though the integers here will be limited to the native integers on the machine.

integer       ←1 havoc::native_integer
small_integer ←1 havoc::native_integer

havoc::native_integer $ x, y  → x + y = havoc::native_iadd x y  x * y = havoc::native_imul x y  x % y = havoc::native_imod x y
                                x - y = havoc::native_isub x y  x / y = havoc::native_idiv x y

/ Known deficient, as this parses only nonnegative integers.
havoc::parse::numeric-literal parse  ← parse node = havoc::characters node /f
                                       f $ x : xs = ⊥                                ← !1 havoc::is_digit x
                                                    havoc::digit_value x + 10 * f xs ↤
                                       f []       = 0

Arbitrary-precision implementation.
Integers here will 

integer ←1 havoc::struct ['tag, 'data]
